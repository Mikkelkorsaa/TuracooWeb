@page "/kontakt-os"
@using System.ComponentModel.DataAnnotations
@using TuracooWeb.Services
@inject ContactService ContactService

<PageTitle>Kontakt Os</PageTitle>

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-sm">
                <div class="card-body p-4">
                    <h1 class="text-center mb-3">Kontakt Os</h1>
                    <p class="text-center text-muted mb-4">Har du spørgsmål? Send os en besked.</p>
                    
                    @if (isSubmitting)
                    {
                        <div class="text-center my-4">
                            <div class="spinner-border text-secondary" role="status">
                                <span class="visually-hidden">Sender...</span>
                            </div>
                            <p class="mt-2">Sender din besked...</p>
                        </div>
                    }
                    else if (submissionResult != null)
                    {
                        <div class="alert @(submissionResult.Success ? "alert-success" : "alert-danger") mb-4">
                            @submissionResult.Message
                        </div>
                        
                        @if (submissionResult.Success)
                        {
                            <button class="btn btn-outline-secondary mb-4" @onclick="ResetForm">
                                Send en ny besked
                            </button>
                        }
                        else
                        {
                            <EditForm Model="@contactModel" OnValidSubmit="HandleSubmit">
                                <DataAnnotationsValidator />
                                <div class="mb-3">
                                    <label for="name" class="form-label">Navn</label>
                                    <InputText @bind-Value="contactModel.Name" 
                                              class="form-control" 
                                              id="name" />
                                    <ValidationMessage For="@(() => contactModel.Name)" class="text-danger" />
                                </div>
                                
                                <div class="mb-3">
                                    <label for="email" class="form-label">Email</label>
                                    <InputText @bind-Value="contactModel.Email" 
                                              class="form-control" 
                                              id="email" />
                                    <ValidationMessage For="@(() => contactModel.Email)" class="text-danger" />
                                </div>
                                
                                <div class="mb-3">
                                    <label for="message" class="form-label">Besked</label>
                                    <InputTextArea @bind-Value="contactModel.Message" 
                                                  class="form-control" 
                                                  id="message" 
                                                  rows="8" />
                                    <ValidationMessage For="@(() => contactModel.Message)" class="text-danger" />
                                </div>
                                
                                <div class="d-grid">
                                    <button type="submit" class="btn btn-secondary btn-lg py-3">
                                        Send Besked
                                    </button>
                                </div>
                            </EditForm>
                        }
                    }
                    else
                    {
                        <EditForm Model="@contactModel" OnValidSubmit="HandleSubmit">
                            <DataAnnotationsValidator />
                            <div class="mb-3">
                                <label for="name" class="form-label">Navn</label>
                                <InputText @bind-Value="contactModel.Name" 
                                          class="form-control" 
                                          id="name" />
                                <ValidationMessage For="@(() => contactModel.Name)" class="text-danger" />
                            </div>
                            
                            <div class="mb-3">
                                <label for="email" class="form-label">Email</label>
                                <InputText @bind-Value="contactModel.Email" 
                                          class="form-control" 
                                          id="email" />
                                <ValidationMessage For="@(() => contactModel.Email)" class="text-danger" />
                            </div>
                            
                            <div class="mb-3">
                                <label for="message" class="form-label">Besked</label>
                                <InputTextArea @bind-Value="contactModel.Message" 
                                              class="form-control" 
                                              id="message" 
                                              rows="8" />
                                <ValidationMessage For="@(() => contactModel.Message)" class="text-danger" />
                            </div>
                            
                            <div class="d-grid">
                                <button type="submit" class="btn btn-secondary btn-lg py-3">
                                    Send Besked
                                </button>
                            </div>
                        </EditForm>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private ContactModel contactModel = new ContactModel();
    private bool isSubmitting = false;
    private ContactResult? submissionResult = null;

    private async Task HandleSubmit()
    {
        isSubmitting = true;
        
        try
        {
            submissionResult = await ContactService.SendContactMessage(
                contactModel.Name,
                contactModel.Email,
                contactModel.Message
            );
        }
        catch (Exception ex)
        {
            submissionResult = new ContactResult 
            { 
                Success = false, 
                Message = "Der opstod en uventet fejl: " + ex.Message 
            };
        }
        
        isSubmitting = false;
    }
    
    private void ResetForm()
    {
        contactModel = new ContactModel();
        submissionResult = null;
    }

    public class ContactModel
    {
        [Required(ErrorMessage = "Navn er påkrævet")]
        public string Name { get; set; } = string.Empty;

        [Required(ErrorMessage = "Email er påkrævet")]
        [EmailAddress(ErrorMessage = "Ugyldig email adresse")]
        public string Email { get; set; } = string.Empty;

        [Required(ErrorMessage = "Besked er påkrævet")]
        public string Message { get; set; } = string.Empty;
    }
}